@using BlazorContacts.Models;
@using System.Net.Http.Json;
@inject HttpClient client

<!--Sprawdzamy czy przesłany kontakt nie jest pusty-->
@if (EditContactModel != null)
{
    <!--Określamy, że ten element ma być modalem-->
    <div class="modal" style="display: @(IsEditModalOpen ? "block" : "none"); top: 50%; left: 50%; transform: translate(-50%, -50%);">
        <div class="modal-content">
            <h3>Edit Contact</h3>
            <!--Tworzymy formę, do której przesyłane są dane z EditContactModel, dzięki tej formie, możemy go zmienić-->
            <EditForm Model="@EditContactModel" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />

                <div class="form-group">
                    <label for="FirstName">First Name:</label>
                    <InputText @bind-Value="EditContactModel.FirstName" class="form-control" />
                    <ValidationMessage For="@(() => EditContactModel.FirstName)" />
                </div>
                <div class="form-group">
                    <label for="LastName">Last Name:</label>
                    <InputText @bind-Value="EditContactModel.LastName" class="form-control" />
                    <ValidationMessage For="@(() => EditContactModel.LastName)" />
                </div>
                <div class="form-group">
                    <label for="PhoneNumber">Phone number:</label>
                    <InputText @bind-Value="EditContactModel.PhoneNumber" class="form-control" />
                    <ValidationMessage For="@(() => EditContactModel.PhoneNumber)" />
                </div>
                <div class="form-group">
                    <label for="Mail">Mail:</label>
                    <InputText @bind-Value="EditContactModel.Mail" class="form-control" />
                    <ValidationMessage For="@(() => EditContactModel.Mail)" />
                </div>
                <div class="form-group">
                    <InputSelect @bind-Value="EditContactModel.Category" class="form-control">
                        <option value="Work">Praca</option>
                        <option value="Personal">Osobiste</option>
                        <option value="Other">Inne</option>
                    </InputSelect>
                </div>
                <!--IF sprawdzający czy kategoria jest WORK, co później wyświetla Subcategory-->
                @if (EditContactModel.Category == "Work")
                {
                    <div class="form-group">
                        <label for="Subcategory">Podkategoria:</label>
                        <InputText @bind-Value="EditContactModel.Subcategory" class="form-control" />
                        <ValidationMessage For="@(() => EditContactModel.Subcategory)" />
                    </div>
                }
                else{
                    EditContactModel.Subcategory = null;
                }
                <!--Przycisk zbiera dane z formy i wysyłający je dalej, w tym przypadku ma je zapostować do API-->
                <button type="submit" class="btn btn-primary" >Save</button>
            </EditForm>
            <!--Przycisk odsyłający do metody zamykającej modala-->
            <button @onclick="CloseEditModal">Close</button>
        </div>
    </div>
}

@code {
    // Parametry
    [Parameter] public bool IsEditModalOpen { get; set; }
    [Parameter] public EventCallback<bool> IsEditModalOpenChanged { get; set; }
    [Parameter] public ContactModel EditContactModel { get; set; }

    // Metoda zamykająca modala
    private void CloseEditModal()
    {
        IsEditModalOpen = false;
        IsEditModalOpenChanged.InvokeAsync(IsEditModalOpen);
    }

    // Asynchroniczna metoda przesyłająca dane z formy i jeśli wszystko z tymi danymi jest w porządku, wysyła żądanie PUT do api z edytowanym kontaktem
    private async Task HandleValidSubmit()
    {
        try
        {
            await client.PutAsJsonAsync($"/api/ContactModel/{EditContactModel.Id}", EditContactModel);
            
        }
        catch (Exception ex)
        {
            // Obsługa błędów
            Console.WriteLine($"Błąd podczas edycji danych: {ex.Message}");
        }
    }
}
