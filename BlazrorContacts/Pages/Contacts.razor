@page "/contacts"
@using BlazorContacts.Models;
@inject HttpClient client


<h3>Contacts</h3>

<AuthorizeView>
    <NotAuthorized>
        <div>
            <p>Proszę się zalogować, aby uzyskać dostęp do szczegółów strony z kontaktami.</p>
            <a href="/Identity/Account/Login">Przejdź do strony logowania</a>
        </div>
        <div>
            @if (ContactList != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Mail</th>
                            <th>Phone Number</th>
                            
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var contact in ContactList)
                    {
                            <tr>
                                <td>@contact.FirstName</td>
                                <td>@contact.LastName</td>
                                <td>@contact.Mail</td>
                                <td>@contact.PhoneNumber</td>
                            </tr>
                    }
                    </tbody>
                </table>
            }
            else
            {
                <p>Brak danych do wyświetlenia.</p>
            }
        </div>

    </NotAuthorized>
    <Authorized>
        <h1>Witam zalogowanego użytkownika</h1>

        <div>
            @if (ContactList != null)
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>First Name</th>
                            <th>Last Name</th>
                            <th>Mail</th>
                            <th>Phone Number</th>
                            <th>Category</th>
                            <th>Subcategory</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var contact in ContactList)
                    {
                            <tr>
                                <td>@contact.FirstName</td>
                                <td>@contact.LastName</td>
                                <td>@contact.Mail</td>
                                <td>@contact.PhoneNumber</td>
                                <td>@contact.Category</td>
                                <td>@contact.Subcategory</td>
                                <td>
                                    <button @onclick="() => OpenEditModal(contact)">Edit</button>
                                </td>
                            </tr>
                    }
                    </tbody>
                </table>
            }
            else
            {
                <p>Brak danych do wyświetlenia.</p>
            }
        </div>
        <button @onclick="OpenAddModal">Dodaj nowy kontakt</button>
        <AddContact IsAddModalOpen="@IsAddModalOpen" IsAddModalOpenChanged="HandleAddModalStateChanged" />
        <EditContact IsEditModalOpen="@IsEditModalOpen" IsEditModalOpenChanged="HandleEditModalStateChanged" EditContactModel="@selectedContact" />

    </Authorized>
</AuthorizeView>

@code {
    List<ContactModel> ContactList;
    ContactModel selectedContact;

    protected override async Task OnInitializedAsync()
    {
        await RefreshContactList();
    }

    private bool IsAddModalOpen { get; set; }
    private bool IsEditModalOpen { get; set; }

    private void OpenAddModal()
    {
        IsAddModalOpen = true;
    }
    private void OpenEditModal(ContactModel contact)
    {
        selectedContact = contact;
        IsEditModalOpen = true;
    }

    private void HandleAddModalStateChanged(bool newState)
    {
        IsAddModalOpen = newState;

        // Odświeżenie listy kontaktów po zamknięciu modala
        if (!IsAddModalOpen)
        {
            RefreshContactList();
        }
    }
    private void HandleEditModalStateChanged(bool newState)
    {
        IsEditModalOpen = newState;
    }

    private async Task RefreshContactList()
    {
        ContactList = await client.GetFromJsonAsync<List<ContactModel>>("/api/ContactModel");
    }
    
}
